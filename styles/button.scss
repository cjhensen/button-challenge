// Color schemes
$blue: #2c82c9;
$red: #e14938;
$green: #1abc9c;
$orange: #fba026;
$purple: #9365b8;

@mixin vendorPrefixes($property, $value...) {
	#{"-webkit-" + $property}: $value;
		 #{"-moz-" + $property}: $value;
					     #{$property}: $value;
}

@mixin keyframes($animationName) {
	@-webkit-keyframes #{$animationName} {
		@content;
	}
	@-moz-keyframes #{$animationName} {
		@content;
	}
	@keyframes #{$animationName} {
		@content;
	}
}

@mixin animation($name: null, 
								 $duration: null, 
								 $fill-mode: null, 
								 $delay: null, 
								 $direction: null, 
								 $iteration-count: null, 
								 $play-state: null, 
								 $timing-function: null) {
	@if $name != null { @include vendorPrefixes(animation-name, $name); }
	@if $duration != null { @include vendorPrefixes(animation-duration, $duration); }
	@if $fill-mode != null { @include vendorPrefixes(animation-fill-mode, $fill-mode); }
	@if $delay != null { @include vendorPrefixes(animation-delay, $delay); }
	@if $direction != null { @include vendorPrefixes(animation-direction, $direction); }
	@if $iteration-count != null { @include vendorPrefixes(animation-iteration-count, $iteration-count); }
	@if $play-state != null { @include vendorPrefixes(animation-play-state, $play-state); }
	@if $timing-function != null { @include vendorPrefixes(animation-timing-function, $timing-function); }
}

$throb-size: 1.25;
@include keyframes(throb) {
	from {
		@include vendorPrefixes(transform, scale3d(1,1,1));
	}

	50% {
		@include vendorPrefixes(transform, scale3d($throb-size, $throb-size, $throb-size));
	}

	to {
		@include vendorPrefixes(transform, scale3d(1,1,1));
	}
}

@include keyframes(vibrate) {
	from {
		@include vendorPrefixes(transform, translate3d(0,0,0));
	}

	20%, 60% {
		@include vendorPrefixes(transform, translate3d(-5px, 0, 0));
	}

	40%, 80% {
		@include vendorPrefixes(transform, translate3d(5px,0,0));
	}

	to {
		@include vendorPrefixes(transform, translate3d(0,0,0));
	}
}

// base styles for btn-rounded
.btn-rounded {
	font-size: 1em; // 16px
	border: 0.125em solid; // 2px
	border-radius: 1em; // 16px
	outline: none;

	margin-bottom: 40px; // for demo purposes with multiple buttons

	@include vendorPrefixes(transition,
		background-color 300ms linear, 
		color 300ms linear, 
		border-color 300ms linear
	);

	@include animation($name: throb, $duration: 600ms, $fill-mode: both);

}

@mixin btn-theme($btn-color, $btn-height: null, $btn-width: null) {
	color: $btn-color;
	background-color: transparent;
	border-color: $btn-color;

	// If no height or width is specified, the button defaults to having padding to space things out
	// If a height is specified and a width is not, the button will have right/left padding
	// If a width is specified and a height is not, the button will have top/bottom padding
	// If the button has both width and height specified, there will be no padding
	@if $btn-height == null and $btn-width == null {
		padding: 0.313em 0.938em; // 5px 15px
	} @else if $btn-height != null and $btn-width == null {
		padding: 0 0.938em;
	} @else if $btn-height == null and $btn-width != null {
		padding: 0.313em 0;
	} @else {
		padding: 0;
	}

	// These three properties are activated if they have values (e.g. are not null, otherwise they don't show up and padding is used)
	height: $btn-height;
	line-height: $btn-height;
	width: $btn-width;

	&:hover {
		color: #FFF;
		background-color: $btn-color;
		cursor: pointer;
	}

	&:active {
		background-color: darken($btn-color, 20%);
		border-color: darken($btn-color, 20%);

		// stops the fade on click, and is instantaneous instead
		@include vendorPrefixes(transition, none);
	}

	&:disabled {
		opacity: 0.4;
		cursor: default;

		@include animation($name: none);
	}

	&:disabled:hover {
		color: $btn-color;
		background-color: transparent;
		
		@include animation($name: vibrate, $duration: 300ms);
	}
}


// BUTTON THEME VARIATIONS
// blue
.btn-primary {
	@include btn-theme($blue);
}
// red
.btn-secondary {
	@include btn-theme($red, $btn-width: 100px);
}
// green
.btn-previous {
	@include btn-theme($green, $btn-height: 80px);
} 
// orange
.btn-continue {
	@include btn-theme($orange, 80px, 140px);
}
.btn-large {
	@include btn-theme($purple, 100px, 50%);
}
