// TODO: DEFINE YOUR BUTTON STYLES HERE

// Color schemes
$base-color: #007acc;
$blue: #2c82c9;
$green: #1abc9c;
$red: #e14938;
$orange: #fba026;

// Throb animation (for calling attention to the button to click it)
$throb-size: 1.25;

@-webkit-keyframes throb {
	from {
		-webkit-transform: scale3d(1,1,1);
						transform: scale3d(1,1,1);
	}

	50% {
		-webkit-transform: scale3d($throb-size, $throb-size, $throb-size);
						transform: scale3d($throb-size, $throb-size, $throb-size);
	}

	to {
		-webkit-transform: scale3d(1,1,1);
						transform: scale3d(1,1,1);
	}
}

@keyframes throb {
	from {
		-webkit-transform: scale3d(1,1,1);
						transform: scale3d(1,1,1);
	}

	50% {
		-webkit-transform: scale3d($throb-size, $throb-size, $throb-size);
						transform: scale3d($throb-size, $throb-size, $throb-size);
	}

	to {
		-webkit-transform: scale3d(1,1,1);
						transform: scale3d(1,1,1);
	}
}

// Vibrate animation (for telling the user they can't click the button)
@-webkit-keyframes vibrate {
	from {
		-webkit-transform: translate3d(0,0,0);
					  transform: translate3d(0,0,0);
	}

	20%, 60% {
		-webkit-transform: translate3d(-5px,0,0);
			      transform: translate3d(-5px,0,0);
	}

	40%, 80% {
		-webkit-transform: translate3d(5px,0,0);
						transform: translate3d(5px,0,0);
	}

	to {
		-webkit-transform: translate3d(0,0,0);
					  transform: translate3d(0,0,0);
	}
}

@keyframes vibrate {
	from {
		-webkit-transform: translate3d(0,0,0);
					  transform: translate3d(0,0,0);
	}

	20%, 60% {
		-webkit-transform: translate3d(-5px,0,0);
			      transform: translate3d(-5px,0,0);
	}

	40%, 80% {
		-webkit-transform: translate3d(5px,0,0);
						transform: translate3d(5px,0,0);
	}

	to {
		-webkit-transform: translate3d(0,0,0);
					  transform: translate3d(0,0,0);
	}
}


.btn {
	height: auto; //changeable
	line-height: 30px; // same as height
	padding: 0 15px;

	font-size: 11pt;
	color: $base-color;
	background-color: rgba($base-color, 0);

	border: 2px solid $base-color;
	border-radius: 16px;
	outline: none;

	-webkit-transition: background-color 300ms linear, 
											color 300ms linear,
											border-color 300ms linear;
					transition: background-color 300ms linear,  
											color 300ms linear,
											border-color 300ms linear;

	-webkit-animation-duration: 750ms;
	animation-duration: 750ms;
	-webkit-animation-fill-mode: both;
	animation-fill-mode: both;

	-webkit-animation-name: throb;
	animation-name: throb;

	&:hover {
		background-color: rgba($base-color, 1);
		color: #FFF;
		cursor: pointer;
	}

	&:active {
		background-color: rgba(darken($base-color, 20%), 1);
		border-color: darken($base-color, 20%);

		-webkit-transition: none;
		transition: none;
	}

	&:disabled {
		background-color: rgba($base-color, 0);
		color: $base-color;
		opacity: 0.4;
		cursor: default;

		-webkit-animation-name: none;
		animation-name: none;
	}

	&:disabled:hover {
		-webkit-animation-duration: 300ms;
		animation-duration: 300ms;
		-webkit-animation-name: vibrate;
		animation-name: vibrate;
	}

}

// FINAL BUTTON

// base styles for btn
.btn-rounded {
	font-size: 1em; // 16px
	border: 0.125em solid; // 2px
	border-radius: 1em; // 16px
	outline: none;
}

@mixin btn-theme($btn-color, $btn-height: null, $btn-width: null) {
	color: $btn-color;
	background-color: transparent; // OR below
	// background-color: rgba($btn-color, 0); // used for fading bg in on transition
	border-color: $btn-color;

	// If no height or width is specified, the button defaults to having padding to space things out
	// If a height is specified and a width is not, the button will have right/left padding
	// If a width is specified and a height is not, the button will have top/bottom padding
	// If the button has both width and height specified, there will be no padding
	@if $btn-height == null and $btn-width == null {
		padding: 0.313em 0.938em; // 5px 15px
	} @else if $btn-height != null and $btn-width == null {
		padding: 0 0.938em;
	} @else if $btn-height == null and $btn-width != null {
		padding: 0.313em 0;
	} @else {
		padding: 0;
	}

	// These three properties are activated if they have values (e.g. are not null, otherwise they don't show up and padding is used)
	height: $btn-height;
	line-height: $btn-height;
	width: $btn-width;

	&:hover {
		color: #FFF;
		background-color: $btn-color;
		cursor: pointer;
	}

	&:active {
		background-color: darken($btn-color, 20%);
		border-color: darken($btn-color, 20%);
	}

	&:disabled {
		opacity: 0.4;
		cursor: default;
	}

	&:disabled:hover {
		color: $btn-color;
		background-color: transparent;
		// ADD VIBRATE ANIMATION
	}
}


// BUTTON THEME VARIATIONS
// blue
.btn-primary {
	@include btn-theme($blue);
}
// red
.btn-secondary {
	@include btn-theme($red, $btn-width: 100px);
}
// green
.btn-tertiary {
	@include btn-theme($green, $btn-height: 80px);
} 
// orange
.btn-fourth {
	@include btn-theme($orange, 80px, 140px);
}
