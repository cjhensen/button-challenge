// Christian Hensen Aug 2016
// https://github.com/cjhensen/


// Mixin for vendor prefixes.
// Can be used with any property and value or set of values.
@mixin vendorPrefixes($property, $value...) {
  #{"-webkit-" + $property}: $value;
     #{"-moz-" + $property}: $value;
               #{$property}: $value;
}


// Mixin for keyframes
@mixin keyframes($animationName) {
  @-webkit-keyframes #{$animationName} {
    @content;
  }
  @-moz-keyframes #{$animationName} {
    @content;
  }
  @keyframes #{$animationName} {
    @content;
  }
}


// Mixin for animation with optional properties.
// To reuse an animation, just @include animation(), pass in one of the 
// animations below (throb or vibrate, or any other animation created in the future),
// and pass in some properties. All properties are automatically vendor prefixed.
@mixin animation($name: null, 
                 $duration: null, 
                 $fill-mode: null, 
                 $delay: null, 
                 $direction: null, 
                 $iteration-count: null, 
                 $play-state: null, 
                 $timing-function: null) {
  @if $name != null { @include vendorPrefixes(animation-name, $name); }
  @if $duration != null { @include vendorPrefixes(animation-duration, $duration); }
  @if $fill-mode != null { @include vendorPrefixes(animation-fill-mode, $fill-mode); }
  @if $delay != null { @include vendorPrefixes(animation-delay, $delay); }
  @if $direction != null { @include vendorPrefixes(animation-direction, $direction); }
  @if $iteration-count != null { @include vendorPrefixes(animation-iteration-count, $iteration-count); }
  @if $play-state != null { @include vendorPrefixes(animation-play-state, $play-state); }
  @if $timing-function != null { @include vendorPrefixes(animation-timing-function, $timing-function); }
}


// Throb animation: Communicates that the button is enabled and the user can continue
// with the experience.
$throb-size: 1.25; // Size that the button grows to
@include keyframes(throb) {
  from {
    @include vendorPrefixes(transform, scale3d(1,1,1));
  }

  50% {
    @include vendorPrefixes(transform, scale3d($throb-size, $throb-size, $throb-size));
  }

  to {
    @include vendorPrefixes(transform, scale3d(1,1,1));
  }
}


// Vibrate animation: Communicates that the button is still disabled and that the
// user cannot click on it.
@include keyframes(vibrate) {
  from {
    @include vendorPrefixes(transform, translate3d(0,0,0));
  }

  20%, 60% {
    @include vendorPrefixes(transform, translate3d(-5px, 0, 0));
  }

  40%, 80% {
    @include vendorPrefixes(transform, translate3d(5px,0,0));
  }

  to {
    @include vendorPrefixes(transform, translate3d(0,0,0));
  }
}


// Base styles for the rounded button.
// Using em's so if zoomed in, the button font and border stays in proportion.
.btn-rounded {
  font-size: 1em; // 16px or 12pt
  border: 0.125em solid; // 2px
  border-radius: 1em; // 16px
  outline: none;

  margin-bottom: 40px; // for demo purposes with multiple buttons

  // Transition used on hover
  @include vendorPrefixes(transition,
    background-color 250ms linear, 
    color 250ms linear, 
    border-color 250ms linear
  );

  // Animation used when the button becomes enabled
  @include animation($name: throb, $duration: 600ms, $fill-mode: both);
}


// Styling the button, with a required color property, and optional height 
// and width properties.
@mixin btn-theme($btn-color, $btn-height: null, $btn-width: null) {
  color: $btn-color;
  background-color: transparent;
  border-color: $btn-color;

  // If no height or width is specified, the button defaults to having padding to space things out.
  // If a height is specified and a width is not, the button will have right/left padding.
  // If a width is specified and a height is not, the button will have top/bottom padding.
  // If the button has both width and height specified, there will be no padding.
  @if $btn-height == null and $btn-width == null {
    padding: 0.313em 0.938em; // 5px 15px
  } @else if $btn-height != null and $btn-width == null {
    padding: 0 0.938em;
  } @else if $btn-height == null and $btn-width != null {
    padding: 0.313em 0;
  } @else {
    padding: 0;
  }

  // These three properties are activated if they have values (e.g. are not 
  // null, otherwise they don't show up and padding is used).
  height: $btn-height;
  line-height: $btn-height;
  width: $btn-width;

  &:hover {
    color: #FFF;
    background-color: $btn-color;
    cursor: pointer;
  }

  &:active {
    background-color: darken($btn-color, 20%);
    border-color: darken($btn-color, 20%);

    // Set transition to none to stop the fade on click, making the color
    // change instantaneous instead.
    @include vendorPrefixes(transition, none);
  }

  &:disabled {
    opacity: 0.4;
    cursor: default;

    // Don't show an animation when the button goes from enabled to disabled
    @include animation($name: none);
  }

  &:disabled:hover {
    color: $btn-color;
    background-color: transparent;
    
    // When hovering and trying to interact with the disabled button,
    // show the Vibrate animation.
    @include animation($name: vibrate, $duration: 300ms);
  }
}


// To create a new button, either use an existing color scheme or add a new variable,
// add a button to the HTML markup with a class of btn-rounded and a class of whatever
// you name the theme variation.

// Color schemes
$blue: #2c82c9;
$red: #e14938;
$green: #1abc9c;
$orange: #fba026;
$purple: #9365b8;


// Button theme variations: Color is required, height and width are not
.btn-primary {
  // Defaults to the padding specified in the mixin
  @include btn-theme($blue);
}
.btn-secondary {
  // Uses specified width, but padding for height
  @include btn-theme($red, $btn-width: 100px);
}
.btn-previous {
  // Uses specified height, but padding for width
  @include btn-theme($green, $btn-height: 80px);
} 
.btn-continue {
  // Used both specified height and width
  @include btn-theme($orange, 80px, 140px);
}
.btn-large {
  // Used both specified height and width
  @include btn-theme($purple, 100px, 50%);
}
